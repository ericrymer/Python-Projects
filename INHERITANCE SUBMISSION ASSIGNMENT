
#parent class
class Organism:
    name = "Unknown"
    species = "Unknown"
    legs = None
    arms = None
    dna = "Sequence A"
    origin ="Unknown"
    carbon_based = True

    def information(self):
        msg = "\nName: {} \nSpecies: {}\nLegs {}\nArms: {} \nDNA: {}\nOrigin: {}\nCardon Based: {}".format(self.name,self.species,self.legs,self.arms,self.dna,self.origin,self.carbon_based)
        return msg

#child class instance
class Human(Organism):
    human_name = 'Brandon Belt'
    human_species = 'Homosapien'
    human_legs = 2
    human_arms = 2

    def ingenuity(self):
        msg = "\nBryce plays professional baseball for the San Francisco Giants!"
        return msg


#another class instance
class  Lion(Organism):
    lion_name = "Leo"
    lion_species = 'Canine'
    lion_legs = 4
    lion_arms = 0
    lion_dna = "Sequence C"
    

    def bite(self):
        msg = "\nKing of the Jungle "
        return msg

#another class instance
class  Pelican(Organism):
    pelican_name = "Paulie"
    pelican_species = 'Bird'
    pelican_legs = 2
    pelican_arms = 2
    pelican_dna = "Sequence D"
   

    def flight(self):
        msg = "\nPaulie loves to fly all around the beach looking for snacks!"
        return msg







if __name__ == "__main__":
    human = Human()
    print(human.information())
    print(human.ingenuity())

    lion = Lion()
    print(lion.information())
    print(lion.bite())

    pelican = Pelican()
    print(pelican.information())
    print(pelican.flight())
